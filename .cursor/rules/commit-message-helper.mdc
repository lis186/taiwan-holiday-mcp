---
description:
globs:
alwaysApply: false
---
# Git Commit Message 智能協助規則

當使用者提到 git commit、提交程式碼、或要求協助撰寫 commit message 時，請遵循以下規則：

## 核心格式規範

使用此格式：`<類型>(<範圍>): <簡短描述>`

### 類型定義
- `feat` - 新功能
- `fix` - 錯誤修復  
- `docs` - 文件更新
- `style` - 程式碼格式調整
- `refactor` - 重構
- `test` - 測試相關
- `chore` - 建置工具變動
- `perf` - 效能改善
- `ci` - CI/CD 相關

### 範圍選項
- `core` - 核心功能模組
- `api` - API 介面相關
- `test` - 測試相關
- `docs` - 文件相關
- `config` - 配置相關
- `build` - 建置相關

## 專案特殊要求

1. **語言使用**：主要使用繁體中文，技術術語可用英文（如 API、MCP、TypeScript）
2. **Task 導向**：如有相關 Task，在詳細描述中註明「相關任務: Task X.X」
3. **簡短描述**：限制在 50 字元內，使用現在式動詞
4. **避免模糊詞彙**：不使用「一些」、「部分」等模糊表達

## 智能協助流程

當使用者需要 commit message 協助時：

1. **分析變更**：檢視 git diff 或使用者描述的變更內容
2. **推薦類型**：根據變更性質推薦適當的類型和範圍
3. **生成建議**：提供 2-3 個符合規範的 commit message 選項
4. **格式檢查**：確認建議符合所有格式要求
5. **讓使用者確認選擇的 commit message**：呼叫 interactive-feedback-mcp，讓使用者確認使用哪個 commit message
6. **讓使用者確認是否 commit**： 呼叫 interactive-feedback-mcp，讓使用者確認是否 commit

## 範例模板

### 功能開發
```
feat(core): 新增台灣假期查詢功能

實作 2024-2025 年台灣國定假日資料
支援農曆新年、中秋節等傳統節日計算
新增假日類型分類功能

相關任務: Task 2.1
```

### 錯誤修復
```
fix(api): 修復日期格式驗證問題

解決輸入非標準日期格式時的錯誤處理
改善錯誤訊息的可讀性
新增邊界條件測試案例
```

### 文件更新
```
docs: 更新 MCP 伺服器使用說明

新增安裝步驟詳細說明
補充 API 端點使用範例
修正文件中的錯字和格式問題
```

## 自動檢查清單

在提供 commit message 建議前，確認：
- [ ] 使用正確的類型前綴
- [ ] 簡短描述在 50 字元內
- [ ] 使用繁體中文和現在式動詞
- [ ] 技術術語保持一致性
- [ ] 如有 Task 關聯，已在詳細描述中註明
- [ ] 避免使用模糊詞彙

## 改善建議

如果使用者提供的 commit message 不符合規範，主動提供改善建議：

1. **指出問題**：明確說明哪些地方需要改善
2. **提供修正版本**：給出符合規範的替代方案
3. **解釋原因**：說明為什麼這樣修改更好
4. **教育意義**：幫助使用者理解規範的重要性

記住：目標是協助建立一致、清晰、有意義的 commit 歷史記錄。
